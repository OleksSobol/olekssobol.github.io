name: Update Latest Commits

on:
  schedule:
    - cron: '0 0 * * *'  # daily at midnight UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update_commits:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Fetch commits and build page
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          USERNAME: OleksSobol
        run: |
          set -euo pipefail

          FILE="commits.md"

          # Write front matter and header
          {
            echo "---"
            echo "layout: single"
            echo "title: Latest Commits"
            echo "permalink: /commits/"
            echo "toc: false"
            echo "---"
            echo
            echo "# Latest Commits Across All Projects"
            echo
          } > $FILE

          # Fetch owned, non-fork repos
          REPOS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/users/${USERNAME}/repos?per_page=100" \
            | jq -r '.[] | select(.fork == false and .owner.login == "'"${USERNAME}"'") | .name')

          if [ -z "$REPOS" ]; then
            echo "_No owned repositories found._" >> $FILE
            exit 0
          fi

          # Loop through repos and fetch latest 5 commits per repo
          for repo in $REPOS; do
            COMMITS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
              "https://api.github.com/repos/${USERNAME}/${repo}/commits?per_page=5" \
              | jq -r '.[] | "- [\(.commit.message // "No message")](\(.html_url)) (\(.commit.author.date | split("T")[0]))"')

            if [ -n "$COMMITS" ]; then
              echo "## [$repo](https://github.com/${USERNAME}/${repo})" >> $FILE
              echo "$COMMITS" >> $FILE
              echo "" >> $FILE
            fi
          done

      - name: Commit changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add commits.md
          git commit -m "Update latest commits" || echo "No changes to commit"
          git push
